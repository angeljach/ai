package com.bmv.auditoria.ai.persistent.auto;

import java.util.List;

import org.apache.cayenne.CayenneDataObject;

import com.bmv.auditoria.ai.persistent.AuditDocuments;
import com.bmv.auditoria.ai.persistent.AuditJobs;
import com.bmv.auditoria.ai.persistent.AuditorRoles;
import com.bmv.auditoria.ai.persistent.AuditorTeamMembers;
import com.bmv.auditoria.ai.persistent.AuditorTeams;
import com.bmv.auditoria.ai.persistent.EffortDocuments;
import com.bmv.auditoria.ai.persistent.MovementsAuditor;
import com.bmv.auditoria.ai.persistent.ObsAuditorComments;
import com.bmv.auditoria.ai.persistent.Observations;
import com.bmv.auditoria.ai.persistent.ReqDocuments;
import com.bmv.auditoria.ai.persistent.RequirementsInformation;

/**
 * Class _Auditors was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Auditors extends CayenneDataObject {

    public static final String AUDITOR_NAME_PROPERTY = "auditorName";
    public static final String AUDIT_DOCUMENTS_ARRAY_PROPERTY = "auditDocumentsArray";
    public static final String AUDIT_JOBS_ARRAY_PROPERTY = "auditJobsArray";
    public static final String AUDITOR_TEAM_MEMBERS_ARRAY_PROPERTY = "auditorTeamMembersArray";
    public static final String AUDITOR_TEAMS_ARRAY_PROPERTY = "auditorTeamsArray";
    public static final String EFFORT_DOCUMENTS_ARRAY_PROPERTY = "effortDocumentsArray";
    public static final String MOVEMENTS_AUDITOR_ARRAY_PROPERTY = "movementsAuditorArray";
    public static final String OBS_AUDITOR_COMMENTS_ARRAY_PROPERTY = "obsAuditorCommentsArray";
    public static final String OBSERVATIONS_ARRAY_PROPERTY = "observationsArray";
    public static final String REQ_DOCUMENTS_ARRAY_PROPERTY = "reqDocumentsArray";
    public static final String REQUIREMENTS_INFORMATION_ARRAY_PROPERTY = "requirementsInformationArray";
    public static final String TO_AUDITOR_ROLES_PROPERTY = "toAuditorRoles";

    public static final String ID_AUDITOR_PK_COLUMN = "id_auditor";

    public void setAuditorName(String auditorName) {
        writeProperty("auditorName", auditorName);
    }
    public String getAuditorName() {
        return (String)readProperty("auditorName");
    }

    public void addToAuditDocumentsArray(AuditDocuments obj) {
        addToManyTarget("auditDocumentsArray", obj, true);
    }
    public void removeFromAuditDocumentsArray(AuditDocuments obj) {
        removeToManyTarget("auditDocumentsArray", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<AuditDocuments> getAuditDocumentsArray() {
        return (List<AuditDocuments>)readProperty("auditDocumentsArray");
    }


    public void addToAuditJobsArray(AuditJobs obj) {
        addToManyTarget("auditJobsArray", obj, true);
    }
    public void removeFromAuditJobsArray(AuditJobs obj) {
        removeToManyTarget("auditJobsArray", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<AuditJobs> getAuditJobsArray() {
        return (List<AuditJobs>)readProperty("auditJobsArray");
    }


    public void addToAuditorTeamMembersArray(AuditorTeamMembers obj) {
        addToManyTarget("auditorTeamMembersArray", obj, true);
    }
    public void removeFromAuditorTeamMembersArray(AuditorTeamMembers obj) {
        removeToManyTarget("auditorTeamMembersArray", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<AuditorTeamMembers> getAuditorTeamMembersArray() {
        return (List<AuditorTeamMembers>)readProperty("auditorTeamMembersArray");
    }


    public void addToAuditorTeamsArray(AuditorTeams obj) {
        addToManyTarget("auditorTeamsArray", obj, true);
    }
    public void removeFromAuditorTeamsArray(AuditorTeams obj) {
        removeToManyTarget("auditorTeamsArray", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<AuditorTeams> getAuditorTeamsArray() {
        return (List<AuditorTeams>)readProperty("auditorTeamsArray");
    }


    public void addToEffortDocumentsArray(EffortDocuments obj) {
        addToManyTarget("effortDocumentsArray", obj, true);
    }
    public void removeFromEffortDocumentsArray(EffortDocuments obj) {
        removeToManyTarget("effortDocumentsArray", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<EffortDocuments> getEffortDocumentsArray() {
        return (List<EffortDocuments>)readProperty("effortDocumentsArray");
    }


    public void addToMovementsAuditorArray(MovementsAuditor obj) {
        addToManyTarget("movementsAuditorArray", obj, true);
    }
    public void removeFromMovementsAuditorArray(MovementsAuditor obj) {
        removeToManyTarget("movementsAuditorArray", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<MovementsAuditor> getMovementsAuditorArray() {
        return (List<MovementsAuditor>)readProperty("movementsAuditorArray");
    }


    public void addToObsAuditorCommentsArray(ObsAuditorComments obj) {
        addToManyTarget("obsAuditorCommentsArray", obj, true);
    }
    public void removeFromObsAuditorCommentsArray(ObsAuditorComments obj) {
        removeToManyTarget("obsAuditorCommentsArray", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<ObsAuditorComments> getObsAuditorCommentsArray() {
        return (List<ObsAuditorComments>)readProperty("obsAuditorCommentsArray");
    }


    public void addToObservationsArray(Observations obj) {
        addToManyTarget("observationsArray", obj, true);
    }
    public void removeFromObservationsArray(Observations obj) {
        removeToManyTarget("observationsArray", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Observations> getObservationsArray() {
        return (List<Observations>)readProperty("observationsArray");
    }


    public void addToReqDocumentsArray(ReqDocuments obj) {
        addToManyTarget("reqDocumentsArray", obj, true);
    }
    public void removeFromReqDocumentsArray(ReqDocuments obj) {
        removeToManyTarget("reqDocumentsArray", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<ReqDocuments> getReqDocumentsArray() {
        return (List<ReqDocuments>)readProperty("reqDocumentsArray");
    }


    public void addToRequirementsInformationArray(RequirementsInformation obj) {
        addToManyTarget("requirementsInformationArray", obj, true);
    }
    public void removeFromRequirementsInformationArray(RequirementsInformation obj) {
        removeToManyTarget("requirementsInformationArray", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<RequirementsInformation> getRequirementsInformationArray() {
        return (List<RequirementsInformation>)readProperty("requirementsInformationArray");
    }


    public void setToAuditorRoles(AuditorRoles toAuditorRoles) {
        setToOneTarget("toAuditorRoles", toAuditorRoles, true);
    }

    public AuditorRoles getToAuditorRoles() {
        return (AuditorRoles)readProperty("toAuditorRoles");
    }


}
