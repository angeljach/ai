package com.bmv.auditoria.ai.persistent.auto;

import java.util.List;

import org.apache.cayenne.CayenneDataObject;

import com.bmv.auditoria.ai.persistent.AuditorTeamMembers;
import com.bmv.auditoria.ai.persistent.Auditors;
import com.bmv.auditoria.ai.persistent.Audits;

/**
 * Class _AuditorTeams was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _AuditorTeams extends CayenneDataObject {

    public static final String TEAM_NAME_PROPERTY = "teamName";
    public static final String AUDITOR_TEAM_MEMBERS_ARRAY_PROPERTY = "auditorTeamMembersArray";
    public static final String AUDITS_ARRAY_PROPERTY = "auditsArray";
    public static final String TO_AUDITORS_PROPERTY = "toAuditors";

    public static final String ID_AUDITOR_TEAM_PK_COLUMN = "id_auditor_team";

    public void setTeamName(String teamName) {
        writeProperty("teamName", teamName);
    }
    public String getTeamName() {
        return (String)readProperty("teamName");
    }

    public void addToAuditorTeamMembersArray(AuditorTeamMembers obj) {
        addToManyTarget("auditorTeamMembersArray", obj, true);
    }
    public void removeFromAuditorTeamMembersArray(AuditorTeamMembers obj) {
        removeToManyTarget("auditorTeamMembersArray", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<AuditorTeamMembers> getAuditorTeamMembersArray() {
        return (List<AuditorTeamMembers>)readProperty("auditorTeamMembersArray");
    }


    public void addToAuditsArray(Audits obj) {
        addToManyTarget("auditsArray", obj, true);
    }
    public void removeFromAuditsArray(Audits obj) {
        removeToManyTarget("auditsArray", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Audits> getAuditsArray() {
        return (List<Audits>)readProperty("auditsArray");
    }


    public void setToAuditors(Auditors toAuditors) {
        setToOneTarget("toAuditors", toAuditors, true);
    }

    public Auditors getToAuditors() {
        return (Auditors)readProperty("toAuditors");
    }


}
